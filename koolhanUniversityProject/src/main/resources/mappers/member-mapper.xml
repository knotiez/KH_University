<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "mybatis-3-mapper.dtd" >
<mapper namespace="memberMapper">

	<resultMap type="Member" id="memberResult">
		<result column="member_no" property="memberNo"/>
		<result column="member_id" property="memberId"/>
		<result column="member_pwd" property="memberPwd"/>
		<result column="member_name" property="memberName"/>
		<result column="member_ssn" property="memberSsn"/>
		<result column="m_phone" property="mePhone"/>
		<result column="m_email" property="meEmail"/>
		<result column="m_address" property="meAddress"/>
		<result column="m_type" property="meType"/>
		<result column="m_status" property="meStatus"/>
		<result column="origin_name" property="originName"/>
		<result column="change_name" property="changeName"/>
	</resultMap>
	
	 <resultMap type="MemberAbsence" id="memberAbsence">
		<result column="abs_no" property="absNo"/> 
		<result column="abs_id" property="absId"/> 
		<result column="abs_start" property="absStart"/> 
		<result column="abs_end" property="absEnd"/> 
		<result column="abs_semester" property="absSemester"/> 
		<result column="tb_status" property="tbStatus"/> 
		<result column="abs_sort" property="absSort"/> 
		<result column="abs_insert" property="absInsert"/> 
		<result column="abs_update" property="absUpdate"/>   
	</resultMap> 
	
	<resultMap type="MemberPresence" id="memberPresence">
		<result column="pre_no" property="preNo" />
		<result column="pre_id" property="preId" />
		<result column="pre_year" property="preYear" />
		<result column="pre_semester" property="preSemester" />
		<result column="tb_status" property="tbStatus" />
		<result column="pre_insert" property="preInsert" />
		<result column="pre_update" property="preUpdate" />
	</resultMap>
	
	<resultMap type="AdminTuition" id="adminTuition">
		<result column="tb_price" property="tbPrice" />
		<result column="tb_open" property="startDate" />
		<result column="tb_close" property="endDate" />
		<result column="tb_semester" property="semester" />
	</resultMap>
	
	<resultMap type="ProfilePic" id="profileResult">
		<result column="img_no" property="imgNo"/>
		<result column="ref_mno" property="refMemberNo"/>
		<result column="ref_sno" property="refStudentNo"/>
		<result column="origin_name" property="originName"/>
		<result column="change_name" property="changeName"/>
	</resultMap>
	
	
	<select id="loginMember" resultMap="memberResult">
		select
		       member_no
		     , member_id
		     , member_pwd
		     , member_name
		     , member_ssn
		     , m_phone
		     , m_email
		     , m_address
		     , m_type
		     , origin_name
		     , change_name
		  from member
		  left join profile_images on (member_no = ref_mno)
		 where m_status = 'Y'
		   and member_id = #{memberId}
	</select>
	
	<insert id="insertMember">
		insert
		  into member
		     (
		       member_no
		     , member_id
		     , member_pwd
		     , member_name
		     , member_ssn
		     , m_phone
		     , m_email
		     , m_address
		     , m_type  
		     )
		values
		     (
		       seq_mno.nextval
		     , 'pr'||to_char(seq_user_no.nextval, 'FM0000')
		     , #{memberPwd}
		     , #{memberName}
		     , #{memberSsn}
		     , #{mePhone}
		     , #{meEmail}
		     , #{meAddress}
		     , #{meType}
		     )
	</insert>
	
	<select id="selectMemberId" resultType="String">
		select
		       member_id
		  from member
		 where m_email = #{meEmail}     
	</select>
	
	<select id="selectChkMember" resultMap="memberResult">
		select 
		       *
		  from member
		 where m_email = #{email}
	</select>

	<update id="changemPwd" parameterType="map">
	    update member
	       set member_pwd = #{userPwd}
	     where member_id = #{memberId}
	</update>
	
	<select id="verifyEmail" resultType="_int">
		select
		       count(*)
		  from member
		 where m_email = #{email}      
	</select>
	
	<update id="updateAddress">
		update member
		   set m_address = #{meAddress}
		 where member_id = #{memberId}
	</update>
	
	<select id="selectAbsenceStudent" resultMap="memberAbsence">
		select
		       abs_no
		     , abs_id
		     , abs_start
		     , abs_end
		     , abs_semester
		     , tb_status
		     , abs_sort
		     , abs_insert
		     , abs_update
		  from absence
	</select>
	
	<select id="selectPresenceStudent" resultMap="memberPresence">
		select 
		       pre_no
		     , pre_id
		     , pre_year
		     , pre_semester
		     , tb_status
		     , pre_insert
		     , pre_update
		  from presence
	</select>
	
	<update id="updateAbsenceStudent">
		update student
	       set s_status = 'H'
	     where student_id = #{absId}
	</update>
	
	<update id="updateAbsenceStudentSuccess">
		update absence
	       set tb_status = 'Y'
	     where abs_id = #{absId}
	</update>
	
	<update id="updatePresenceStudent">
		update student
		   set s_status = 'Y'
		 where student_id = #{preId}
	</update>
	
	<update id="updatePresenceStudentSuccess">
		update presence
		   set tb_status = 'Y'
		 where pre_id = #{preId}
	</update>
	
	<insert id="insertAdminTuition">
		insert into tuition_bill(
		    TT_NO 
		    , TB_OPEN
		    , TB_CLOSE
		    , TB_PRICE
		    , TB_SEMESTER 
		    , TB_INSERT 
		    , TB_UPDATE 
		    )
		    values(
		    SEQ_TTNO.nextVal
		    , #{startDate}
		    , #{endDate}
		    , #{tbPrice}
		    , #{semester}
		    , sysdate
		    , sysdate
		    )
	</insert>
	
	<select id="selectAdminTuition" resultMap="adminTuition">
		select * from tuition_bill
	</select>
		
	<select id="selectAllMember" resultMap="memberResult">
		select
			   member_no
			 , member_name
			 , member_id
			 , m_phone
			 , m_status
			 , m_type  
		  from member
		 order
		    by member_no desc	   
	</select>	

	<select id="selectAllMemberType" resultMap="memberResult">
		select
			   member_no
			 , member_name
			 , member_id
			 , m_phone
			 , m_status
			 , m_type  
		  from member
		 where m_type = #{meType}
		 order
		    by member_no desc	   
	</select>	
	
	<select id="selectNameSearchAllMember" resultMap="memberResult">
		select
			   member_no
			 , member_name
			 , member_id
			 , m_phone
			 , m_status
			 , m_type  
		  from member
		 where member_name like '%' || #{memberName} || '%'
		 order
		    by member_no desc	   
	</select>	
	
	<select id="selectNameSearchTypeMember" resultMap="memberResult">
		select
			   member_no
			 , member_name
			 , member_id
			 , m_phone
			 , m_status
			 , m_type  
		  from member
		 where m_type = #{meType}
		   and member_name like '%' || #{memberName} || '%'
		 order
		    by member_no desc	   
	</select>	
	
	<select id="selectMemberListCount" resultType="_int">
		select
			   count(*)
		  from member
	</select>

	<select id="selectMemberListCountType" resultType="_int">
		select
			   count(*)
		  from member
		 where m_type = #{meType}
	</select>

	<select id="selectNameSearchMemberListCount" resultType="_int">
		select
			   count(*)
		  from member
		 where member_name like '%' || #{memberName} || '%'
	</select>

	<select id="selectNameSearchTypeMemberListCount" resultType="_int">
		select
			   count(*)
		  from member
		 where member_name like '%' || #{memberName} || '%'
		   and m_type = #{meType}
	</select>
	
	<update id="updateProfilePicture">
		update profile_images
		   set change_name = #{changeName}
		     , origin_name = #{originName}
		 where ref_mno = #{memberNo}    
	</update>
		
</mapper>