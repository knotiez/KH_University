----- 테이블 드랍
--접속유저의 모든테이블 및 제약조건 삭제
BEGIN
    FOR C IN (SELECT TABLE_NAME FROM USER_TABLES) LOOP
    EXECUTE IMMEDIATE ('DROP TABLE '||C.TABLE_NAME||' CASCADE CONSTRAINTS');
    END LOOP;
END;
/
--접속유저의 모든 시퀀스 삭제
BEGIN
FOR C IN (SELECT * FROM USER_SEQUENCES) LOOP
  EXECUTE IMMEDIATE 'DROP SEQUENCE '||C.SEQUENCE_NAME;
END LOOP;
END;
/
--접속유저의 모든 뷰 삭제
BEGIN
FOR C IN (SELECT * FROM USER_VIEWS) LOOP
  EXECUTE IMMEDIATE 'DROP VIEW '||C.VIEW_NAME;
END LOOP;
END;
/
--접속유저의 모든 트리거 삭제
BEGIN
FOR C IN (SELECT * FROM USER_TRIGGERS) LOOP
  EXECUTE IMMEDIATE 'DROP TRIGGER '||C.TRIGGER_NAME;
END LOOP;
END;
/

create sequence SEQ_USER_NO nocache;

------------- 교수 교직원 테이블
CREATE 
 TABLE MEMBER
     (
       MEMBER_NO NUMBER CONSTRAINT PK_MEMBER PRIMARY KEY
     , MEMBER_ID VARCHAR2(30) UNIQUE NOT NULL
     , MEMBER_PWD VARCHAR2(100) NOT NULL
     , MEMBER_NAME VARCHAR2(15) NOT NULL
     , MEMBER_SSN VARCHAR2(14) NOT NULL
     , M_PHONE VARCHAR2(14) NOT NULL
     , M_EMAIL VARCHAR2(50) NOT NULL
     , M_ADDRESS VARCHAR2(200) NOT NULL
     , M_TYPE VARCHAR2(1) CHECK(M_TYPE IN('P', 'A')) NOT NULL
     , M_STATUS VARCHAR2(1) DEFAULT 'Y' CHECK(M_STATUS IN ('Y', 'N'))
     );

COMMENT ON COLUMN MEMBER.MEMBER_NO IS '회원번호';
COMMENT ON COLUMN MEMBER.MEMBER_ID IS '아이디';
COMMENT ON COLUMN MEMBER.MEMBER_PWD IS '비밀번호';
COMMENT ON COLUMN MEMBER.MEMBER_NAME IS '이름';
COMMENT ON COLUMN MEMBER.MEMBER_SSN IS '주민등록번호';
COMMENT ON COLUMN MEMBER.M_PHONE IS '전화번호';
COMMENT ON COLUMN MEMBER.M_EMAIL IS '이메일';
COMMENT ON COLUMN MEMBER.M_ADDRESS IS '주소';
COMMENT ON COLUMN MEMBER.M_TYPE IS '교수:P 행정직원:A';
COMMENT ON COLUMN MEMBER.M_STATUS IS '재직 : Y 퇴직 : N';

CREATE SEQUENCE SEQ_MNO NOCACHE;
--------------------- 학생 정보
CREATE 
 TABLE STUDENT
     (
       STUDENT_NO NUMBER CONSTRAINT PK_STUDENT PRIMARY KEY
     , STUDENT_ID VARCHAR2(30) UNIQUE NOT NULL
     , STUDENT_PWD VARCHAR2(100) NOT NULL
     , STUDENT_NAME VARCHAR2(15) NOT NULL
     , STUDENT_SSN VARCHAR2(13) NOT NULL
     , S_PHONE VARCHAR2(14) NOT NULL
     , S_EMAIL VARCHAR2(50) NOT NULL
     , S_ADDRESS VARCHAR2(200) NOT NULL
     , S_STATUS VARCHAR2(1) DEFAULT 'Y'  CHECK(S_STATUS IN ('Y', 'N','H','Z','J')) 
     , ENROLL_DATE DATE DEFAULT SYSDATE NOT NULL
     , ABSENCE_DATE DATE 
     , GRAD_DATE DATE
     );

COMMENT ON COLUMN STUDENT.STUDENT_NO IS '회원번호';
COMMENT ON COLUMN STUDENT.STUDENT_ID IS '아이디';
COMMENT ON COLUMN STUDENT.STUDENT_PWD IS '비밀번호';
COMMENT ON COLUMN STUDENT.STUDENT_NAME IS '이름';
COMMENT ON COLUMN STUDENT.STUDENT_SSN IS '주민등록번호';
COMMENT ON COLUMN STUDENT.S_PHONE IS '전화번호';
COMMENT ON COLUMN STUDENT.S_EMAIL IS '이메일';
COMMENT ON COLUMN STUDENT.S_ADDRESS IS '주소';
COMMENT ON COLUMN STUDENT.S_STATUS IS '학생 상태: 재학 Y 자퇴 N 휴학 H ㅈㅔ적 Z 졸업 J ';
COMMENT ON COLUMN STUDENT.ENROLL_DATE IS '입학년도';
COMMENT ON COLUMN STUDENT.ABSENCE_DATE IS '휴학년도';
COMMENT ON COLUMN STUDENT.GRAD_DATE IS '졸업년도';


CREATE SEQUENCE SEQ_SNO NOCACHE;
------------------------------------ 휴학생 정보
CREATE TABLE absence (
    
    abs_no number PRIMARY KEY,
    abs_id VARCHAR2(30) NOT NULL,
    abs_semester VARCHAR2(4) NOT NULL,
    abs_grade VARCHAR2(1) NOT NULL,
    abs_sort VARCHAR2(2) DEFAULT 'a1' CHECK(abs_sort IN ('a1', 'a2', 'a3', 'a4')),
    abs_status VARCHAR2(1) DEFAULT 'Y' CHECK(abs_status IN ('Y', 'N', 'H', 'Z', 'j')),
    CONSTRAINT FK_ABSENCE_STUDENT FOREIGN KEY (abs_no) REFERENCES student(student_no)
);

COMMENT ON COLUMN absence.abs_no IS '휴학생 번호';
COMMENT ON COLUMN absence.abs_no IS '휴학생 학번';
COMMENT ON COLUMN absence.abs_semester IS '휴학 학기';
COMMENT ON COLUMN absence.abs_grade IS '휴학생 학년';
COMMENT ON COLUMN absence.abs_sort IS '휴학 구분';
COMMENT ON COLUMN absence.abs_status IS '휴학생 상태';

------------------------------------ 복학생 정보
CREATE TABLE presence (
    pre_no number PRIMARY KEY,
    pre_id VARCHAR2(30) NOT NULL,
    pre_semester VARCHAR2(4) NOT NULL,
    pre_grade VARCHAR2(1) NOT NULL,
    pre_status VARCHAR2(1) DEFAULT 'H' CHECK(pre_status IN ('Y', 'N', 'H', 'Z', 'J')),
    CONSTRAINT FK_PRESENCE_STUDENT FOREIGN KEY (pre_no) REFERENCES student(student_no)
);

COMMENT ON COLUMN presence.pre_no IS '복학생 번호';
COMMENT ON COLUMN presence.pre_id IS '복학생 학번';
COMMENT ON COLUMN presence.pre_semester IS '복학 연도';
COMMENT ON COLUMN presence.pre_grade IS '복학 학기';
COMMENT ON COLUMN presence.pre_status IS '복학생 상태: 학생 상태 - 재학(Y), 자퇴(N), 휴학(H), 제적(Z), 졸업(J)';

-------------------- 과목
CREATE
 TABLE CLASS
     (
       CLASS_NO NUMBER CONSTRAINT PK_CLASS PRIMARY KEY
     , PROF_NO NUMBER CONSTRAINT FK_CLASS REFERENCES MEMBER
     , CLASS_NAME VARCHAR2(50) NOT NULL
     , CLASS_TYPE VARCHAR2(2) CHECK(CLASS_TYPE IN ('C1', 'C2', 'C3', 'C4'))
     , CLASS_SCORE NUMBER NOT NULL
     );
     
COMMENT ON COLUMN CLASS.CLASS_NO IS '강의 번호';
COMMENT ON COLUMN CLASS.PROF_NO IS '강의 담당 교수 번호';
COMMENT ON COLUMN CLASS.CLASS_NAME IS '강의 제목';
COMMENT ON COLUMN CLASS.CLASS_TYPE IS 'C1:필수전공 C2:선택전공 C3:필수교양 C4: 선택교양';
COMMENT ON COLUMN CLASS.CLASS_SCORE IS '이수학점';

CREATE SEQUENCE SEQ_CLASS NOCACHE;

--------- 과목상세
CREATE 
 TABLE CLASS_DETAIL
     (
       REF_CNO NUMBER CONSTRAINT PK_CLASS_DETAIL PRIMARY KEY REFERENCES CLASS
     , CLASS_DAY VARCHAR2(9) NOT NULL
     , CLASS_TIME VARCHAR2(20) NOT NULL
     );
     
COMMENT ON COLUMN CLASS_DETAIL.REF_CNO IS '강의 번호';
COMMENT ON COLUMN CLASS_DETAIL.CLASS_DAY IS '강의 요일';
COMMENT ON COLUMN CLASS_DETAIL.CLASS_TIME IS '강의 시간';

---------- 성적
CREATE
 TABLE GRADE
     (
       CLASS_NO NUMBER CONSTRAINT FK_GRADE_01 REFERENCES CLASS
     , STUDENT_NO NUMBER CONSTRAINT FK_GRADE_02 REFERENCES STUDENT
     , GRADE VARCHAR2(3) NOT NULL
     , TERM_NO VARCHAR2(6) NOT NULL
     , CONSTRAINT PK_GRADE PRIMARY KEY(CLASS_NO, STUDENT_NO)
     );
COMMENT ON COLUMN GRADE.CLASS_NO IS '강의 번호';
COMMENT ON COLUMN GRADE.STUDENT_NO IS '학생 번호';
COMMENT ON COLUMN GRADE.GRADE IS '학점';
COMMENT ON COLUMN GRADE.TERM_NO IS '학기 번호';

------------- 커뮤니티

CREATE
 TABLE BOARD
     (
       BOARD_NO NUMBER CONSTRAINT PK_BOARD PRIMARY KEY
     , BOARD_WRITER NUMBER CONSTRAINT FK_STUDENT REFERENCES STUDENT
     , BOARD_TITLE VARCHAR2(100) NOT NULL
     , BOARD_CONTENT VARCHAR2(4000) NOT NULL
     , COUNT NUMBER DEFAULT 0
     , CREATE_DATE DATE DEFAULT SYSDATE
     , B_STATUS VARCHAR2(1) DEFAULT 'Y' CHECK(B_STATUS IN ('Y','N'))
     , ORIGIN_NAME VARCHAR2(100)
     , CHANGE_NAME VARCHAR2(100)
     );
     
     
COMMENT ON COLUMN BOARD.BOARD_NO IS '글 번호';
COMMENT ON COLUMN BOARD.BOARD_WRITER IS '작성자 학생 번호';
COMMENT ON COLUMN BOARD.BOARD_TITLE IS '글 제목';
COMMENT ON COLUMN BOARD.BOARD_CONTENT IS '글 내용';
COMMENT ON COLUMN BOARD.COUNT IS '조회수';
COMMENT ON COLUMN BOARD.CREATE_DATE IS '작성일';
COMMENT ON COLUMN BOARD.B_STATUS IS 'Y 전시 N 삭제';
COMMENT ON COLUMN BOARD.ORIGIN_NAME IS '첨부파일 원래이름';
COMMENT ON COLUMN BOARD.CHANGE_NAME IS '첨부파일 바뀐이름';

CREATE SEQUENCE SEQ_BNO NOCACHE;

--------------- 댓글
CREATE
 TABLE REPLY
     (
       REPLY_NO NUMBER CONSTRAINT PK_REPLY PRIMARY KEY
     , REF_BNO NUMBER CONSTRAINT FK_REPLY_01 REFERENCES BOARD
     , REPLY_WRITER NUMBER CONSTRAINT FK_REPLY_02 REFERENCES STUDENT
     , REPLY_CONTENT VARCHAR2(400) NOT NULL
     , CREATE_DATE DATE DEFAULT SYSDATE
     , R_STATUS VARCHAR2(1) CHECK(R_STATUS IN ('Y','N'))
     );
     
COMMENT ON COLUMN REPLY.REPLY_NO IS '댓글번호';
COMMENT ON COLUMN REPLY.REF_BNO IS '게시글번호';
COMMENT ON COLUMN REPLY.REPLY_WRITER IS '작성자 학생번호';
COMMENT ON COLUMN REPLY.REPLY_CONTENT IS '댓글내용';
COMMENT ON COLUMN REPLY.CREATE_DATE IS '작성날짜';
COMMENT ON COLUMN REPLY.R_STATUS IS '댓글 상태';

CREATE SEQUENCE SEQ_RNO NOCACHE;

-------------- 등록금 고지서
CREATE
 TABLE TUITION
     (
       TT_NO NUMBER CONSTRAINT PK_TUITION PRIMARY KEY
     , STUDENT_NO NUMBER CONSTRAINT FK_TUITION REFERENCES STUDENT
     , STU_GRADE NUMBER NOT NULL
     , TERM_NO VARCHAR2(6) NOT NULL
     , TUITION NUMBER NOT NULL
     , SCHOLARSHIP NUMBER NOT NULL
     );
     
COMMENT ON COLUMN TUITION.TT_NO IS '고지서 번호';
COMMENT ON COLUMN TUITION.STUDENT_NO IS '학번';
COMMENT ON COLUMN TUITION.STU_GRADE IS '학년';
COMMENT ON COLUMN TUITION.TERM_NO IS '학기';
COMMENT ON COLUMN TUITION.TUITION IS '등록금';
COMMENT ON COLUMN TUITION.SCHOLARSHIP IS '수혜금';

CREATE SEQUENCE SEQ_TNO NOCACHE;

---------------- 등록금 납부
CREATE 
 TABLE TUITION_PAYMENT
     (
       TP_NO NUMBER CONSTRAINT PK_TUITION_PAYMENT PRIMARY KEY
     , TT_NO NUMBER CONSTRAINT FK_TUITION_PAYMENT REFERENCES TUITION
     , TP_DATE DATE NOT NULL
     , TP_TOTAL_PRICE NUMBER
     );

COMMENT ON COLUMN TUITION_PAYMENT.TP_NO IS '등록금 납부 번호';
COMMENT ON COLUMN TUITION_PAYMENT.TT_NO IS '고지서 번호';
COMMENT ON COLUMN TUITION_PAYMENT.TP_DATE IS '납부일 (기한)';
COMMENT ON COLUMN TUITION_PAYMENT.TP_TOTAL_PRICE IS '납부한 금액';

CREATE SEQUENCE SEQ_TPNO NOCACHE;

------------------ 장학금
CREATE
 TABLE SCHOLARSHIPS
     (
       SCH_NO NUMBER CONSTRAINT PK_SCHOLARSHIPS PRIMARY KEY
     , SCH_NAME VARCHAR2(100) NOT NULL
     , SCH_AMOUNT NUMBER NOT NULL
     , SCH_REQ VARCHAR2(4000) NOT NULL
     );
     
COMMENT ON COLUMN SCHOLARSHIPS.SCH_NO IS '장학금 번호';
COMMENT ON COLUMN SCHOLARSHIPS.SCH_NAME IS '장학금 이름';
COMMENT ON COLUMN SCHOLARSHIPS.SCH_AMOUNT IS '장학금 금액';
COMMENT ON COLUMN SCHOLARSHIPS.SCH_REQ IS '장학금 조건';


------------------ 장학금 수혜
CREATE 
 TABLE SCHOLARSHIPS_STU
     (
       SCH_STU_NO NUMBER CONSTRAINT PK_SCHOLARSHIPS_STU PRIMARY KEY
     , SCH_NO NUMBER CONSTRAINT FK_SCHOLARSHIPS_STU_01 REFERENCES SCHOLARSHIPS
     , STUDENT_NO NUMBER CONSTRAINT FK_SCHOLARSHIPS_STU_02 REFERENCES STUDENT
     , SCH_STU_DATE DATE NOT NULL
     , SCH_STU_STATE VARCHAR2(20) NOT NULL
     , SCH_STU_SEMESTER VARCHAR2(20) NOT NULL
     );

COMMENT ON COLUMN SCHOLARSHIPS_STU.SCH_STU_NO IS '장학금 수혜번호';
COMMENT ON COLUMN SCHOLARSHIPS_STU.SCH_NO IS '장학금 번호';
COMMENT ON COLUMN SCHOLARSHIPS_STU.STUDENT_NO IS '장학금 받은 학생 학번';
COMMENT ON COLUMN SCHOLARSHIPS_STU.SCH_STU_DATE IS '수혜일자';
COMMENT ON COLUMN SCHOLARSHIPS_STU.SCH_STU_STATE IS '확인 상태';
COMMENT ON COLUMN SCHOLARSHIPS_STU.SCH_STU_SEMESTER IS '수혜 학기';

------------------------------- 공지사항

CREATE
 TABLE NOTICE
     (
       NOTICE_NO NUMBER CONSTRAINT PK_NOTICE PRIMARY KEY
     , NOTICE_WRITER NUMBER CONSTRAINT FK_MEMBER REFERENCES MEMBER
     , NOTICE_TITLE VARCHAR2(50) NOT NULL
     , NOTICE_CONTENT VARCHAR2(4000) NOT NULL
     , CREATE_DATE DATE DEFAULT SYSDATE NOT NULL
     );


     
COMMENT ON COLUMN NOTICE.NOTICE_NO IS '공지사항 번호';
COMMENT ON COLUMN NOTICE.NOTICE_WRITER IS '작성회원번호';
COMMENT ON COLUMN NOTICE.NOTICE_TITLE IS '공지사항 제목';
COMMENT ON COLUMN NOTICE.NOTICE_CONTENT IS '공지사항 내용';
COMMENT ON COLUMN NOTICE.CREATE_DATE IS '작성일자';
     
CREATE SEQUENCE SEQ_NNO NOCACHE;

ALTER TABLE notice ADD N_STATUS VARCHAR2(1) DEFAULT 'Y' CONSTRAINT CK_NOTICE CHECK (N_STATUS IN ('Y', 'N'));
COMMENT ON COLUMN NOTICE.N_STATUS IS '공지사항 상태';

insert into member values
(seq_mno.nextval, 'knottiez' , '1234', 'Daniel Jung', '930524-1234567', '010-3254-8319', 'danieljung.danny@gmail.com','서울시 송파구', 'A', 'Y');

insert
  into notice
     (
       notice_no
     , notice_writer
     , notice_title
     , notice_content
     )
values
     (
       SEQ_NNO.nextval
     , 1
     , '테스트할거야'
     , '시험할거야'
     );
insert
  into notice
     (
       notice_no
     , notice_writer
     , notice_title
     , notice_content
     )
values
     (
       SEQ_NNO.nextval
     , 1
     , '테스트할거야2'
     , '시험할거야2'
     );
     
insert
  into notice
     (
       notice_no
     , notice_writer
     , notice_title
     , notice_content
     )
values
     (
       SEQ_NNO.nextval
     , 1
     , '이게 되려나'
     , '하하하'
     );
     
insert
  into notice
     (
       notice_no
     , notice_writer
     , notice_title
     , notice_content
     )
values
     (
       SEQ_NNO.nextval
     , 1
     , '다섯개는 있어야지 할만한디'
     , '다섯개는 있어야제'
     );
     insert
  into notice
     (
       notice_no
     , notice_writer
     , notice_title
     , notice_content
     )
values
     (
       SEQ_NNO.nextval
     , 1
     , '더 넘어가는게 있어야하나'
     , '공지사항 헬로'
     );
     

CREATE 
 TABLE PROJECT
     (
       REF_STUDENT_NO NUMBER CONSTRAINT FK_PROJECT_01 REFERENCES STUDENT
     , REF_CLASS_NO NUMBER CONSTRAINT FK_PROJECT_02 REFERENCES CLASS
     , PROJECT_TITLE VARCHAR2(100) NOT NULL
     , PROJECT_CONTENT VARCHAR2(4000) 
     , PROJECT_TYPE VARCHAR2(1) CHECK(PROJECT_TYPE IN ('M', 'F')) NOT NULL
     , PJ_ORIGIN_NAME VARCHAR2(100)
     , PJ_CHANGE_NAME VARCHAR2(100)
     , PJ_UPLOAD_DATE DATE DEFAULT SYSDATE NOT NULL
     , PJ_DUE_DATE DATE NOT NULL
     , PJ_STATUS VARCHAR2(10) CHECK(PJ_STATUS IN('I', 'D', 'M'))
     , CONSTRAINT PK_PROJECT PRIMARY KEY (REF_STUDENT_NO, REF_CLASS_NO)
     );

COMMENT ON COLUMN PROJECT.REF_STUDENT_NO IS '과제 제출 학생';
COMMENT ON COLUMN PROJECT.REF_CLASS_NO IS '과목 번호';
COMMENT ON COLUMN PROJECT.PROJECT_TITLE IS '과제 제목';
COMMENT ON COLUMN PROJECT.PROJECT_CONTENT IS '과제 내용';
COMMENT ON COLUMN PROJECT.PROJECT_TYPE IS '과제 유형';
COMMENT ON COLUMN PROJECT.PJ_ORIGIN_NAME IS '과제 첨부파일 기존이름';
COMMENT ON COLUMN PROJECT.PJ_CHANGE_NAME IS '과제 첨부파일 바뀐 이름';
COMMENT ON COLUMN PROJECT.PJ_UPLOAD_DATE IS '과제 올린 날짜';
COMMENT ON COLUMN PROJECT.PJ_DUE_DATE IS '과제 제출날짜';
COMMENT ON COLUMN PROJECT.PJ_STATUS IS '과제 제출 상태 I = ING, D = DONE, M = MISS';

CREATE 
 TABLE CLASS_NOTICE
     (
       CLASS_NOTICE_NO NUMBER CONSTRAINT PK_CLASS_NOTICE PRIMARY KEY
     , REF_CLASS_NO CONSTRAINT FK_CLASS_NOTICE_01 REFERENCES CLASS
     , CN_WRITER NUMBER CONSTRAINT FK_CLASS_NOTICE_02 REFERENCES MEMBER
     , CN_TITLE VARCHAR2(100) NOT NULL
     , CN_CONTENT VARCHAR2(4000) NOT NULL
     , CN_DATE DATE DEFAULT SYSDATE NOT NULL
     , CN_ORIGIN_NAME VARCHAR2(100)
     , CN_CHANGE_NAME VARCHAR2(100)
     , CN_STATUS VARCHAR2(1) DEFAULT 'Y' CHECK(CN_STATUS IN ('Y','N'))
     , CN_COUNT NUMBER
     );

COMMENT ON COLUMN CLASS_NOTICE.CLASS_NOTICE_NO IS '자료실 공지사항 번호';
COMMENT ON COLUMN CLASS_NOTICE.REF_CLASS_NO IS '자료실 공지사항 과목 번호';
COMMENT ON COLUMN CLASS_NOTICE.CN_WRITER IS '자료실 공지사항 작성자';
COMMENT ON COLUMN CLASS_NOTICE.CN_TITLE IS '자료실 공지사항 제목';
COMMENT ON COLUMN CLASS_NOTICE.CN_CONTENT IS '자료실 공지사항 내용';
COMMENT ON COLUMN CLASS_NOTICE.CN_DATE IS '자료실 공지사항 작성일';
COMMENT ON COLUMN CLASS_NOTICE.CN_ORIGIN_NAME IS '자료실 공지사항 첨부파일 기존이름';
COMMENT ON COLUMN CLASS_NOTICE.CN_CHANGE_NAME IS '자료실 공지사항 첨부파일 바뀐이름';
COMMENT ON COLUMN CLASS_NOTICE.CN_STATUS IS '자료실 공지사항 상태';
COMMENT ON COLUMN CLASS_NOTICE.CN_COUNT IS '자료실 공지사항 조회수';

CREATE SEQUENCE SEQ_CNNO NOCACHE;

COMMIT;